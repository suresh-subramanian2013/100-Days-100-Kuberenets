apiVersion: apps/v1
kind: Deployment
metadata:
  name: karpenter
  namespace: karpenter
  labels:
    app.kubernetes.io/name: karpenter
    app.kubernetes.io/instance: karpenter
    app.kubernetes.io/version: "0.37.0"
spec:
  replicas: 2
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: karpenter
      app.kubernetes.io/instance: karpenter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: karpenter
        app.kubernetes.io/instance: karpenter
        app.kubernetes.io/version: "0.37.0"
    spec:
      serviceAccountName: karpenter
      securityContext:
        fsGroup: 65532
      containers:
        - name: controller
          image: public.ecr.aws/karpenter/karpenter:v0.37.0
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi
          env:
            - name: KUBERNETES_MIN_VERSION
              value: "1.19.0-0"
            - name: KARPENTER_SERVICE
              value: karpenter
            - name: WEBHOOK_PORT
              value: "8443"
            - name: METRICS_PORT
              value: "8000"
            - name: HEALTH_PROBE_PORT
              value: "8001"
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MEMORY_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: controller
                  resource: limits.memory
                  divisor: "1Mi"
            - name: FEATURE_GATES
              value: "Drift=true"
            - name: CLUSTER_NAME
              value: CLUSTER_NAME_PLACEHOLDER
            - name: CLUSTER_ENDPOINT
              value: CLUSTER_ENDPOINT_PLACEHOLDER
            - name: AWS_REGION
              value: AWS_REGION_PLACEHOLDER
            - name: AWS_DEFAULT_REGION
              value: AWS_REGION_PLACEHOLDER
            - name: INTERRUPTION_QUEUE
              value: CLUSTER_NAME_PLACEHOLDER
          ports:
            - name: http-metrics
              containerPort: 8000
              protocol: TCP
            - name: http
              containerPort: 8001
              protocol: TCP
            - name: https-webhook
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 30
          securityContext:
            runAsUser: 65532
            runAsGroup: 65532
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: karpenter.sh/nodepool
                    operator: DoesNotExist
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: karpenter
                  app.kubernetes.io/instance: karpenter
              topologyKey: kubernetes.io/hostname
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          operator: Exists
          key: node-role.kubernetes.io/control-plane
